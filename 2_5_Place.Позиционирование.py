from tkinter import *
from tkinter import ttk                     # подключаем пакет ttk, улучшенные виджеты
 
root = Tk()                                 # Инициалиция окна
root.title("Main window")                   # название окна
root.iconbitmap(default="ico/favicon.ico")  # установка иконки для окна
root.geometry("300x250+400+200")            # "Ширина x Высота + Смещение по X + Смещение по Y"
root.minsize(200,150)                       # минимальные размеры: ширина - 200, высота - 150
###############################################################################################

# Метод place() позволяет более точно настроить координаты и размеры виджета. 
# Он принимает следующие параметры:
# height и width: устанавливают соответственно высоту и ширину элемента в пикселях
# relheight и relwidth: также задают соответственно высоту и ширину элемента, 
# но в качестве значения используется число float в промежутке между 0.0 и 1.0, 
# которое указывает на долю от высоты и ширины родительского контейнера
# x и y: устанавливают смещение элемента по горизонтали и вертикали в пикселях соответственно 
# относительно верхнего левого угла контейнера
# relx и rely: также задают смещение элемента по горизонтали и вертикали, 
# но в качестве значения используется число float в промежутке между 0.0 и 1.0, к
# оторое указывает на долю от высоты и ширины родительского контейнера
# bordermode: задает формат границы элемента. Может принимать значение INSIDE (по умолчанию) 
# и OUTSIDE
# anchor: устанавливает опции растяжения элемента. 
# Может принимать значения n, e, s, w, ne, nw, se, sw, c, 
# которые являются сокращениями от North(север - вверх), South (юг - низ), 
# East (восток - правая сторона), West (запад - левая сторона) и Center (по центру). 
# Например, значение nw указывает на верхний левый угол


btn = ttk.Button(text="Click me")


# # Установка расположения
# # Параметры x и y позволяют задать точные параметры расположения относительно 
# # верхнего левого угла контейнера:
# btn.place(x=20, y=40)

# # Параметры relx и rely также позволяют сместить виджет, 
# # но в качестве значения используется число float в промежутке между 0.0 и 1.0, 
# # которое указывает на долю от высоты и ширины родительского контейнера:
# btn.place(relx=0.4, rely=0.25)


# # Anchor
# # Параметр anchor помещает виджет в определенной части контейнера.
# # n: положение вверху по центру
# # e: положение в правой части контейнера по центру
# # s: положение внизу по центру
# # w: положение в левой части контейнера по центру
# # nw: положение в верхнем левом углу
# # ne: положение в верхнем правом углу
# # se: положение в нижнем правом углу
# # sw: положение в нижнем левом углу
# # center: положение центру
# btn1 = ttk.Button(text="nw")
# btn1.place(anchor="nw")
# btn2 = ttk.Button(text="n")
# btn2.place(anchor="n")
# btn3 = ttk.Button(text="ne")
# btn3.place(anchor="ne")
# btn4 = ttk.Button(text="e")
# btn4.place(anchor="e")
# btn5 = ttk.Button(text="se")
# btn5.place(anchor="se")
# btn6 = ttk.Button(text="s")
# btn6.place(anchor="s")
# btn7 = ttk.Button(text="sw")
# btn7.place(anchor="sw")
# btn8 = ttk.Button(text="w")
# btn8.place(anchor="w")
# btn9 = ttk.Button(text="center")
# btn9.place(anchor="center")


# # Параметры relheight и relwidth также задают соответственно высоту и ширину элемента, 
# # но в качестве значения используется число float в промежутке между 0.0 и 1.0, 
# # которое указывает на долю от высоты и ширины родительского контейнера:
# btn.place(relx=.5, rely=.5, anchor="c")

# # Размеры
# # Параметры height и width устанавливают соответственно высоту и ширину элемента в пикселях:
# btn.place(relx=0.5, rely=0.5, anchor="c", width=100, height=60)

# Параметры relheight и relwidth также задают соответственно высоту и ширину элемента, 
# но в качестве значения используется число float в промежутке между 0.0 и 1.0, 
# которое указывает на долю от высоты и ширины родительского контейнера:
btn.place(relx=0.5, rely=0.5, anchor="c", relwidth=0.33, relheight=0.25)


root.mainloop()
