from tkinter import *
from tkinter import ttk                     # подключаем пакет ttk, улучшенные виджеты
 
root = Tk()                                 # Инициалиция окна
root.title("Main window")                   # название окна
root.iconbitmap(default="ico/favicon.ico")  # установка иконки для окна
root.geometry("300x250+400+200")            # "Ширина x Высота + Смещение по X + Смещение по Y"
root.minsize(200,150)                       # минимальные размеры: ширина - 200, высота - 150
###############################################################################################


btn = ttk.Button(text="Click me")


# параметры метода pack():
# expand: если равно True, то виджет заполняет все пространство контейнера.
# fill: определяет, будет ли виджет растягиваться, чтобы заполнить свободное пространство вокруг. Этот параметр может принимать следующие значения: NONE (по умолчанию, элемент не растягивается), X (элемент растягивается только по горизонтали), Y (элемент растягивается только по вертикали) и BOTH (элемент растягивается по вертикали и горизонтали).
# anchor: помещает виджет в определенной части контейнера. Может принимать значения n, e, s, w, ne, nw, se, sw, c, которые являются сокращениями от Noth(север - вверх), South (юг - низ), East (восток - правая сторона), West (запад - левая сторона) и Center (по центру). Например, значение nw указывает на верхний левый угол
# side: выравнивает виджет по одной из сторон контейнера. Может принимать значения: TOP (по умолчанию, выравнивается по верхней стороне контейнера), BOTTOM (выравнивание по нижней стороне), LEFT (выравнивание по левой стороне), RIGHT (выравнивание по правой стороне).
# ipadx: устанавливает отступ содержимого виджета от его границы по горизонтали.
# ipady: устанавливают отступ содержимого виджета от его границы по вертикали.
# padx: устанавливает отступ виджета от границ контейнера по горизонтали.
# pady: устанавливает отступ виджета от границ контейнера по вертикали.


# # expand: если равно True, то виджет заполняет все пространство контейнера.
# btn.pack(expand=True)

# # Anchor помещает виджет в определенной части контейнера. Может принимать значения n, e, s, w, ne, nw, se, sw, c, которые являются сокращениями от Noth(север - вверх), South (юг - низ), East (восток - правая сторона), West (запад - левая сторона) и Center (по центру). Например, значение nw указывает на верхний левый угол
# # n: положение вверху по центру
# # e: положение в правой части контейнера по центру
# # s: положение внизу по центру
# # w: положение в левой части контейнера по центру
# # nw: положение в верхнем левом углу
# # ne: положение в верхнем правом углу
# # se: положение в нижнем правом углу
# # sw: положение в нижнем левом углу
# # center: положение центру
# # btn.pack(anchor=NW)
# btn1 = ttk.Button(text="nw")
# btn1.pack(anchor="nw")
# btn2 = ttk.Button(text="n")
# btn2.pack(anchor="n")
# btn3 = ttk.Button(text="ne")
# btn3.pack(anchor="ne")
# btn4 = ttk.Button(text="e")
# btn4.pack(anchor="e")
# btn5 = ttk.Button(text="se")
# btn5.pack(anchor="se")
# btn6 = ttk.Button(text="s")
# btn6.pack(anchor="s")
# btn7 = ttk.Button(text="sw")
# btn7.pack(anchor="sw")
# btn8 = ttk.Button(text="w")
# btn8.pack(anchor="w")
# btn9 = ttk.Button(text="center")
# btn9.pack(anchor="center")


# # Позиционирование по стороне
# # Используем параметр side:
btn1 = ttk.Button(text="TOP")
btn1.pack(side=TOP)

btn2 = ttk.Button(text="RIGHT")
btn2.pack(side=RIGHT)
 
btn3 = ttk.Button(text="BOTTOM")
btn3.pack(side=BOTTOM)

btn4 = ttk.Button(text="LEFT")
btn4.pack(side=LEFT)


# # Заполнение контейнера
# # fill позволяет заполнить пространство контейнер по горизонтали (значение X), 
# # по вертикали (значение Y) или по обеим сторонам (значение BOTH). 
# # По умолчанию значение NONE
# btn.pack(fill=BOTH, expand=True) # кнопка на всё окно
# btn.pack(fill=Y, expand=True)
# btn.pack(fill=X)

# # Отступы
# # Параметры padx и pady позволяют указать отступы виджета от границ контейнера:
# btn.pack(anchor="nw", padx=20, pady=30)

# # задаём отдельно два отступа от правой и левой границы и 
# # отдельно два отступа от верхней и нижней границ:
# # В данном случае отступ слева - 20 единиц, а справа - 60 единиц
# btn.pack(fill=X, padx=[20, 60], pady=30)
# btn.pack(fill=X, padx=[20, 60], pady=30)
# btn.pack(fill=BOTH, padx=[20, 20], pady=[20, 20], expand=True) 


# # Параметры ipadx и ipady позволяют указать отступы содержимого виджета 
# # от границ виджета по горизонтали и вертикали соответственно:
# btn.pack(expand=True, ipadx=10, ipady=10)


# Позиционирование по стороне
# # Используем параметр side:
# btn1 = ttk.Button(text="BOTTOM")
# btn1.pack(side=BOTTOM)
 
# btn2 = ttk.Button(text="RIGHT")
# btn2.pack(side=RIGHT)
 
# btn3 = ttk.Button(text="LEFT")
# btn3.pack(side=LEFT)
 
# btn4 = ttk.Button(text="TOP")
# btn4.pack(side=TOP)

# Комбинируя параметры side и fill, можно растянуть элемент по вертикали:
# btn.pack(side=LEFT, fill=Y)



root.mainloop()
