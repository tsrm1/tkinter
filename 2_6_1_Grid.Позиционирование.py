from tkinter import *
from tkinter import ttk                     # подключаем пакет ttk, улучшенные виджеты
 
root = Tk()                                 # Инициалиция окна
root.title("Main window")                   # название окна
root.iconbitmap(default="ico/favicon.ico")  # установка иконки для окна
root.geometry("300x250+400+200")            # "Ширина x Высота + Смещение по X + Смещение по Y"
root.minsize(200,150)                       # минимальные размеры: ширина - 200, высота - 150
###############################################################################################

# Метод grid() позволяет поместить виджет в определенную ячейку условной сетки или грида.
# Метод grid применяет следующие параметры:
# column: номер столбца, отсчет начинается с нуля
# row: номер строки, отсчет начинается с нуля
# columnspan: сколько столбцов должен занимать элемент
# rowspan: сколько строк должен занимать элемент
# ipadx и ipady: отступы по горизонтали и вертикали соответственно от границ элемента 
# до его содержимого
# padx и pady: отступы по горизонтали и вертикали соответственно от границ ячейки грида 
# до границ элемента
# sticky: выравнивание элемента в ячейке, если ячейка больше элемента. 
# Может принимать значения n, e, s, w, ne, nw, se, sw, 
# которые указывают соответствующее направление выравнивания


# Конфигурация грида
# Для конфигурации грида в контейнере применяются два метода:
# container.columnconfigure(index, weight)  - настраивает столбец
# В качестве параметра index метод получает индекс столбца, 
# а через параметр weight устанавливает его вес. 
# Столбцы распределяются по всей ширине контейнера в соответствии со своим весом
# 
# container.rowconfigure(index, weight) - настраивает строку аналогичным образом. 
# В качестве параметра index метод получает индекс строки, 
# а через параметр weight устанавливает ее вес. 
# Строки распределяются по всей длине контейнера в соответствии со своим весом.


# для упрощения в цикле для каждой строки устанавливаем вес 1. 
# То есть в итоге каждая из трех строк будет занимать треть высоты контейнера 
# (пространство_контейнера / сумму всех весов строк
for c in range(3): root.columnconfigure(index=c, weight=1)
for r in range(3): root.rowconfigure(index=r, weight=1)


# Отступы
# Параметры padx и pady повзвозяют установить отступы по горизонтали и вертикали соответственно 
# от границ ячейки грида до границ виджета, а ipadx и ipady - отступы по горизонтали и вертикали 
# соответственно от границ виджета до его содержимого



# Установка ячейки виджета
# определим грид из 9 кнопок:
for r in range(3):
    for c in range(3):
        btn = ttk.Button(text=f"({r},{c})")
        # btn.grid(row=r, column=c)                                           # без отступов
        # btn.grid(row=r, column=c, ipadx=6, ipady=6, padx=4, pady=4)         # с отступами
        
        # В данном случае внешние отсуты равны 4 единиц, а внутренние - 6 единицам.
        btn.grid(row=r, column=c, ipadx=6, ipady=6, padx=[15, 4], pady=4)   # с отступами слева и справа


root.mainloop()


